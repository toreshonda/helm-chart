---
# Source: ei-pattern-1/templates/integrator/integrator-bin.yaml
# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: integrator-bin
  namespace : wso2-ei
data:
  integrator.sh: "#!/bin/sh\n# ----------------------------------------------------------------------------\n#  Copyright 2005-2012 WSO2, Inc. http://www.wso2.org\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n# ----------------------------------------------------------------------------\n# Main Script for the WSO2 Carbon Server\n#\n# Environment Variable Prequisites\n#\n#   CARBON_HOME   Home of WSO2 Carbon installation. If not set I will  try\n#                   to figure it out.\n#\n#   JAVA_HOME       Must point at your Java Development Kit installation.\n#\n#   JAVA_OPTS       (Optional) Java runtime options used when the commands\n#                   is executed.\n#\n# NOTE: Borrowed generously from Apache Tomcat startup scripts.\n# -----------------------------------------------------------------------------\n\n\ndocker_container_ip=$(awk 'END{print $1}' /etc/hosts)\n\nsed -i \"s#<parameter\\ name=\\\"localMemberHost\\\".*<\\/parameter>#<parameter\\ name=\\\"localMemberHost\\\">${docker_container_ip}<\\/parameter>#\" ${WSO2_SERVER_HOME}/conf/axis2/axis2.xml\n\n\n\n\n# OS specific support.  $var _must_ be set to either true or false.\n#ulimit -n 100000\n\ncygwin=false;\ndarwin=false;\nos400=false;\nmingw=false;\ncase \"`uname`\" in\nCYGWIN*) cygwin=true;;\nMINGW*) mingw=true;;\nOS400*) os400=true;;\nDarwin*) darwin=true\n        if [ -z \"$JAVA_VERSION\" ] ; then\n             JAVA_VERSION=\"CurrentJDK\"\n           else\n             echo \"Using Java version: $JAVA_VERSION\"\n           fi\n           if [ -z \"$JAVA_HOME\" ] ; then\n             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home\n           fi\n           ;;\nesac\n\n# resolve links - $0 may be a softlink\nPRG=\"$0\"\n\nwhile [ -h \"$PRG\" ]; do\n  ls=`ls -ld \"$PRG\"`\n  link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n  if expr \"$link\" : '.*/.*' > /dev/null; then\n    PRG=\"$link\"\n  else\n    PRG=`dirname \"$PRG\"`/\"$link\"\n  fi\ndone\n\n# Get standard environment variables\nPRGDIR=`dirname \"$PRG\"`\n\n# Only set CARBON_HOME if not already set\n[ -z \"$CARBON_HOME\" ] && CARBON_HOME=`cd \"$PRGDIR/..\" ; pwd`\n\n# Set AXIS2_HOME. Needed for One Click JAR Download\nAXIS2_HOME=\"$CARBON_HOME\"\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CARBON_HOME\" ] && CARBON_HOME=`cygpath --unix \"$CARBON_HOME\"`\n  [ -n \"$AXIS2_HOME\" ] && CARBON_HOME=`cygpath --unix \"$CARBON_HOME\"`\nfi\n\n# For OS400\nif $os400; then\n  # Set job priority to standard for interactive (interactive - 6) by using\n  # the interactive priority - 6, the helper threads that respond to requests\n  # will be running at the same priority as interactive jobs.\n  COMMAND='chgjob job('$JOBNAME') runpty(6)'\n  system $COMMAND\n\n  # Enable multi threading\n  QIBM_MULTI_THREADED=Y\n  export QIBM_MULTI_THREADED\nfi\n\n# For Migwn, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$CARBON_HOME\" ] &&\n    CARBON_HOME=\"`(cd \"$CARBON_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n  [ -n \"$AXIS2_HOME\" ] &&\n    CARBON_HOME=\"`(cd \"$CARBON_HOME\"; pwd)`\"\n  # TODO classpath?\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=java\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\"\n  echo \" CARBON cannot execute $JAVACMD\"\n  exit 1\nfi\n\n# if JAVA_HOME is not set we're not happy\nif [ -z \"$JAVA_HOME\" ]; then\n  echo \"You must set the JAVA_HOME variable before running CARBON.\"\n  exit 1\nfi\n\nif [ -e \"$CARBON_HOME/wso2carbon.pid\" ]; then\n  PID=`cat \"$CARBON_HOME\"/wso2carbon.pid`\nfi\n\n# ----- Process the input command ----------------------------------------------\nargs=\"\"\nfor c in $*\ndo\n    if [ \"$c\" = \"--debug\" ] || [ \"$c\" = \"-debug\" ] || [ \"$c\" = \"debug\" ]; then\n          CMD=\"--debug\"\n          continue\n    elif [ \"$CMD\" = \"--debug\" ]; then\n          if [ -z \"$PORT\" ]; then\n                PORT=$c\n          fi\n    elif [ \"$c\" = \"--stop\" ] || [ \"$c\" = \"-stop\" ] || [ \"$c\" = \"stop\" ]; then\n          CMD=\"stop\"\n    elif [ \"$c\" = \"--start\" ] || [ \"$c\" = \"-start\" ] || [ \"$c\" = \"start\" ]; then\n          CMD=\"start\"\n    elif [ \"$c\" = \"--version\" ] || [ \"$c\" = \"-version\" ] || [ \"$c\" = \"version\" ]; then\n          CMD=\"version\"\n    elif [ \"$c\" = \"--restart\" ] || [ \"$c\" = \"-restart\" ] || [ \"$c\" = \"restart\" ]; then\n          CMD=\"restart\"\n    else\n        args=\"$args $c\"\n    fi\ndone\n\nif [ \"$CMD\" = \"--debug\" ]; then\n  if [ \"$PORT\" = \"\" ]; then\n    echo \" Please specify the debug port after the --debug option\"\n    exit 1\n  fi\n  if [ -n \"$JAVA_OPTS\" ]; then\n    echo \"Warning !!!. User specified JAVA_OPTS will be ignored, once you give the --debug option.\"\n  fi\n  CMD=\"RUN\"\n  JAVA_OPTS=\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=$PORT\"\n  echo \"Please start the remote debugging client to continue...\"\nelif [ \"$CMD\" = \"start\" ]; then\n  if [ -e \"$CARBON_HOME/wso2carbon.pid\" ]; then\n    if  ps -p $PID > /dev/null ; then\n      echo \"Process is already running\"\n      exit 0\n    fi\n  fi\n  export CARBON_HOME=\"$CARBON_HOME\"\n# using nohup sh to avoid erros in solaris OS.TODO\n  nohup sh \"$CARBON_HOME\"/bin/integrator.sh $args > /dev/null 2>&1 &\n  exit 0\nelif [ \"$CMD\" = \"stop\" ]; then\n  export CARBON_HOME=\"$CARBON_HOME\"\n  kill -term `cat \"$CARBON_HOME\"/wso2carbon.pid`\n  exit 0\nelif [ \"$CMD\" = \"restart\" ]; then\n  export CARBON_HOME=\"$CARBON_HOME\"\n  kill -term `cat \"$CARBON_HOME\"/wso2carbon.pid`\n  process_status=0\n  pid=`cat \"$CARBON_HOME\"/wso2carbon.pid`\n  while [ \"$process_status\" -eq \"0\" ]\n  do\n        sleep 1;\n        ps -p$pid 2>&1 > /dev/null\n        process_status=$?\n  done\n\n# using nohup sh to avoid erros in solaris OS.TODO\n  nohup sh \"$CARBON_HOME\"/bin/integrator.sh $args > /dev/null 2>&1 &\n  exit 0\n\nelif [ \"$CMD\" = \"version\" ]; then\n  cat \"$CARBON_HOME\"/bin/version.txt\n  cat \"$CARBON_HOME\"/bin/wso2carbon-version.txt\n  exit 0\nfi\n\n# ---------- Handle the SSL Issue with proper JDK version --------------------\njava_version=$(\"$JAVACMD\" -version 2>&1 | awk -F '\"' '/version/ {print $2}')\njava_version_formatted=$(echo \"$java_version\" | awk -F. '{printf(\"%02d%02d\",$1,$2);}')\nif [ $java_version_formatted -lt 0107 ] || [ $java_version_formatted -gt 1100 ]; then\n   echo \" Starting WSO2 Carbon (in unsupported JDK)\"\n   echo \" [ERROR] CARBON is supported only on JDK 1.7, 1.8, 9, 10 and 11\"\nfi\n\nCARBON_XBOOTCLASSPATH=\"\"\nfor f in \"$CARBON_HOME\"/wso2/lib/xboot/*.jar\ndo\n    if [ \"$f\" != \"$CARBON_HOME/wso2/lib/xboot/*.jar\" ];then\n        CARBON_XBOOTCLASSPATH=\"$CARBON_XBOOTCLASSPATH\":$f\n    fi\ndone\n\nCARBON_CLASSPATH=\"\"\nif [ -e \"$JAVA_HOME/lib/tools.jar\" ]; then\n    CARBON_CLASSPATH=\"$JAVA_HOME/lib/tools.jar\"\nfi\nfor f in \"$CARBON_HOME\"/bin/*.jar\ndo\n    if [ \"$f\" != \"$CARBON_HOME/bin/*.jar\" ];then\n        CARBON_CLASSPATH=\"$CARBON_CLASSPATH\":$f\n    fi\ndone\nfor t in \"$CARBON_HOME\"/wso2/lib/*.jar\ndo\n    CARBON_CLASSPATH=\"$CARBON_CLASSPATH\":$t\ndone\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  JAVA_HOME=`cygpath --absolute --windows \"$JAVA_HOME\"`\n  CARBON_HOME=`cygpath --absolute --windows \"$CARBON_HOME\"`\n  AXIS2_HOME=`cygpath --absolute --windows \"$CARBON_HOME\"`\n  CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  CARBON_CLASSPATH=`cygpath --path --windows \"$CARBON_CLASSPATH\"`\n  CARBON_XBOOTCLASSPATH=`cygpath --path --windows \"$CARBON_XBOOTCLASSPATH\"`\nfi\n\n# ----- Execute The Requested Command -----------------------------------------\n\necho JAVA_HOME environment variable is set to $JAVA_HOME\necho CARBON_HOME environment variable is set to \"$CARBON_HOME\"\n\ncd \"$CARBON_HOME\"\n\nTMP_DIR=\"$CARBON_HOME\"/tmp\nif [ -d \"$TMP_DIR\" ]; then\nrm -rf \"$TMP_DIR\"/*\nfi\n\nSTART_EXIT_STATUS=121\nstatus=$START_EXIT_STATUS\n\nif [ -z \"$JVM_MEM_OPTS\" ]; then\n   java_version=$(\"$JAVACMD\" -version 2>&1 | awk -F '\"' '/version/ {print $2}')\n   JVM_MEM_OPTS=\"-Xms256m -Xmx1024m\"\n   if [ \"$java_version\" \\< \"1.8\" ]; then\n      JVM_MEM_OPTS=\"$JVM_MEM_OPTS -XX:MaxPermSize=256m\"\n   fi\nfi\necho \"Using Java memory options: $JVM_MEM_OPTS\"\n\n#To monitor a Carbon server in remote JMX mode on linux host machines, set the below system property.\n#   -Djava.rmi.server.hostname=\"your.IP.goes.here\"\n\nJAVA_VER_BASED_OPTS=\"\"\n\nif [ $java_version_formatted -ge 1100 ]; then\n    JAVA_VER_BASED_OPTS=\"--add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens java.rmi/sun.rmi.transport=ALL-UNNAMED\"\nfi\n\nwhile [ \"$status\" = \"$START_EXIT_STATUS\" ]\ndo\n    $JAVACMD \\\n    -Xbootclasspath/a:\"$CARBON_XBOOTCLASSPATH\" \\\n    $JVM_MEM_OPTS \\\n    -XX:+HeapDumpOnOutOfMemoryError \\\n    -XX:HeapDumpPath=\"$CARBON_HOME/repository/logs/heap-dump.hprof\" \\\n    $JAVA_OPTS \\\n    -Dcom.sun.management.jmxremote \\\n    -classpath \"$CARBON_CLASSPATH\" \\\n    $JAVA_VER_BASED_OPTS \\\n    -Djava.io.tmpdir=\"$CARBON_HOME/wso2/tmp\" \\\n    -Dcatalina.base=\"$CARBON_HOME/wso2/lib/tomcat\" \\\n    -Dwso2.server.standalone=true \\\n    -Dcarbon.registry.root=/ \\\n    -Djava.command=\"$JAVACMD\" \\\n    -Dcarbon.home=\"$CARBON_HOME\" \\\n    -Dlogger.server.name=\"EI-Core\" \\\n    -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager \\\n    -Dcarbon.config.dir.path=\"$CARBON_HOME/conf\" \\\n    -Dcarbon.components.dir.path=\"$CARBON_HOME/wso2/components\" \\\n    -Dcarbon.extensions.dir.path=\"$CARBON_HOME/extensions\" \\\n    -Dcarbon.dropins.dir.path=\"$CARBON_HOME/dropins\" \\\n    -Dcarbon.external.lib.dir.path=\"$CARBON_HOME/lib\" \\\n    -Dcarbon.patches.dir.path=\"$CARBON_HOME/patches\" \\\n    -Dcarbon.servicepacks.dir.path=\"$CARBON_HOME/servicepacks\" \\\n    -Dcarbon.internal.lib.dir.path=\"$CARBON_HOME/wso2/lib\" \\\n    -Dei.extendedURIBasedDispatcher=org.wso2.carbon.integrator.core.handler.IntegratorStatefulHandler \\\n    -Djava.util.logging.config.file=\"$CARBON_HOME/conf/etc/logging-bridge.properties\" \\\n    -Dcomponents.repo=\"$CARBON_HOME/wso2/components/plugins\" \\\n    -Dconf.location=\"$CARBON_HOME/conf\"\\\n    -Dcom.atomikos.icatch.file=\"$CARBON_HOME/wso2/lib/transactions.properties\" \\\n    -Dcom.atomikos.icatch.hide_init_file_path=true \\\n    -Dorg.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false \\\n    -Dorg.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER=true \\\n    -Dcom.sun.jndi.ldap.connect.pool.authentication=simple  \\\n    -Dcom.sun.jndi.ldap.connect.pool.timeout=3000  \\\n    -Dorg.terracotta.quartz.skipUpdateCheck=true \\\n    -Djava.security.egd=file:/dev/./urandom \\\n    -Dfile.encoding=UTF8 \\\n    -Djava.net.preferIPv4Stack=true \\\n    -Dcom.ibm.cacheLocalHost=true \\\n    -DworkerNode=false \\\n    -DenableCorrelationLogs=false \\\n    -Dorg.wso2.CorrelationLogInterceptor.BlacklistedThreads=Framework,Start,RegistryLogWritter,Component \\\n    -Dorg.wso2.ignoreHostnameVerification=true \\\n    -Dorg.apache.activemq.SERIALIZABLE_PACKAGES=\"*\" \\\n    -Djavax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom=net.sf.saxon.xpath.XPathFactoryImpl \\\n    -DavoidConfigUpdate=true \\\n    -Dproperties.file.path=default \\\n    -Djdk.tls.client.protocols=TLSv1.2 \\\n    org.wso2.carbon.bootstrap.Bootstrap $*\n    status=$?\ndone\n"
